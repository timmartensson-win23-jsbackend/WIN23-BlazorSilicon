@using BlazorWebApp.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore



@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject ApplicationDbContext DbContext
@inject SemaphoreSlim Semaphore

@if (userProfile == null || user == null)
{
    <p>Loading...</p>
} else
{
    <p>@userProfile.FirstName</p>
}

<h3>ProfileInfo</h3>
@* <section class="account-profileinfo" id="account-profileinfo">
    <div class="profile">
        <div class="image">
            <img src="@(user.UserProfile?.ProfileImage != null ? $"/uploads/{user.UserProfile.ProfileImage}" : placeholderImage)" alt="profile image" />
        </div>
        <form enctype="multipart/form-data" method="post" asp-action="UploadImage" asp-controller="Account">
            <input id="upload-file" type="file" name="file" hidden />
            <label for="upload-file" class="btn-cirkle"><i class="fa-regular fa-refresh"></i></label>
        </form>
    </div>
    <div class="info">
        <h3 class="display-name">@user.UserProfile!.FirstName @user.UserProfile!.LastName</h3>
        <p class="email">@user.Email</p>
    </div>
</section> *@


@code {
    private ApplicationUser user = default!;
    private UserProfile? userProfile = default!;


    // private string placeholderImage = "/images/profile-image.svg";



    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await Semaphore.WaitAsync();
        try
        {
            user = await UserManager.GetUserAsync(HttpContext.User);
            userProfile = await DbContext.UserProfiles.FirstOrDefaultAsync(x => x.Id == user.UserProfileId);
        }
        finally
        {
            Semaphore.Release();
        }
    }



}
